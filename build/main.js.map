{"version":3,"file":"main.bundle.js","mappings":"MAAA,MAAMA,EAAU,2CAChB,IAAIC,EAAaC,SAASC,qBAAqB,SAG/CC,eAAeC,EAAmBC,EAAKC,GACrC,IAAIC,QAAiBC,MAAM,kCAAkCH,KAAOC,YAAcP,KAClF,GAAsB,KAAnBQ,EAASE,OAAc,CACxB,IAAIC,QAAeH,EAASI,OAC5BC,QAAQC,IAAIH,GACZ,IAAII,EAAOJ,EAAOK,KAAKD,KACvBE,MAAMF,EAAKG,WAEXL,QAAQC,IAAI,SAASN,EAASE,WAAWF,EAASW,WAmBxCjB,SAASkB,cAAc,YAC7BC,QAAU,MAflBjB,eAAgCW,GAC9B,IAAIP,QAAiBC,MAAM,8BAA8BM,YAAef,KACpEW,QAAeH,EAASI,OACN,KAAnBJ,EAASE,QAAkC,MAAjBC,EAAOD,OAClCO,MAAMN,EAAOK,KAAKD,KAAKG,MACG,SAAjBP,EAAOD,QAChBG,QAAQC,IAAI,GAAGH,EAAOD,WAAWC,EAAOK,QACxCC,MAAM,sCAAsCF,sJAE5CF,QAAQC,IAAIN,EAASE,QAQvBY,CADWrB,EAAW,GAAGsB,QAKNrB,SAASsB,eAAe,kBAC9BH,QAAUjB,iBACvB,IAAIqB,EACAC,EAYLC,UAAUC,YAAYC,oBAXrB,SAAkBC,GACjB,IAAIC,EAAMD,EAAIE,OACd/B,EAAW,GAAGsB,MAAQ,GAAGQ,EAAIN,WAC7BxB,EAAW,GAAGsB,MAAQ,GAAGQ,EAAIL,YAC7BD,EAAWxB,EAAW,GAAGsB,MACzBG,EAAYzB,EAAW,GAAGsB,MAC1BlB,EAAkBoB,EAAUC,MAE7B,SAAgBO,GACfpB,QAAQC,IAAI,iBAAiBmB,EAAIC,SAASD,EAAId,eAMxBjB,SAASkB,cAAc,uBAC7BC,QAAU,KAG3BhB,EAFeJ,EAAW,GAAGsB,MACbtB,EAAW,GAAGsB,S","sources":["webpack://js-advanced-pollution-project/./src/index.js"],"sourcesContent":["const API_KEY = process.env.API_KEY;\r\nlet coordInput = document.getElementsByTagName('input');\r\n\r\n//fetching data from coords input\r\nasync function getCoordPollution (lat, lon) {\r\n  let response = await fetch(`https://api.waqi.info/feed/geo:${lat};${lon}/?token=${API_KEY}`);\r\n  if(response.status == 200){\r\n    let result = await response.json();\r\n    console.log(result);\r\n    let city = result.data.city;\r\n    alert(city.name);\r\n  } else {\r\n    console.log(`Error ${response.status}: ${response.message}`);\r\n  }\r\n}\r\n\r\n//fetching data from city input\r\nasync function getCityPollution(city) {\r\n  let response = await fetch(`https://api.waqi.info/feed/${city}/?token=${API_KEY}`);\r\n  let result = await response.json();\r\n  if(response.status == 200 && result.status == 'ok') {\r\n    alert(result.data.city.name);\r\n  } else if (result.status == 'error'){\r\n    console.log(`${result.status}: ${result.data}`);\r\n    alert(`Unfortunately we have no datas for ${city} station (incredible but true), insert coords to see datas from the nearest station or try with another city. Go check https://waqi.info/ to see`)\r\n  } else {\r\n    console.log(response.status);\r\n  }\r\n}\r\n\r\n// data output from city input\r\nlet getCity = document.querySelector('#getCity');\r\ngetCity.onclick = () => {\r\n  let city = coordInput[2].value;\r\n  getCityPollution(city);\r\n}\r\n\r\n//data output from user coords input\r\nlet getLocalCoords = document.getElementById('getLocalCoords');\r\ngetLocalCoords.onclick = async function getCoord(){\r\n  let latitude;\r\n  let longitude;\r\n  function success (pos) {\r\n   let crd = pos.coords;\r\n   coordInput[0].value = `${crd.latitude}`;\r\n   coordInput[1].value = `${crd.longitude}`;\r\n   latitude = coordInput[0].value;\r\n   longitude = coordInput[1].value;\r\n   getCoordPollution(latitude, longitude);\r\n  };\r\n  function error (err){\r\n   console.log(`Alert! Error: ${err.code}, ${err.message}`);\r\n  }\r\n navigator.geolocation.getCurrentPosition(success, error);\r\n}\r\n\r\n//data output from somewhere coords input\r\nlet getSomewhereCoords = document.querySelector(\"#getSomewhereCoords\");\r\ngetSomewhereCoords.onclick = () => {\r\n  let latitude = coordInput[0].value;\r\n  let longitude = coordInput[1].value;\r\n  getCoordPollution(latitude, longitude);\r\n}\r\n"],"names":["API_KEY","coordInput","document","getElementsByTagName","async","getCoordPollution","lat","lon","response","fetch","status","result","json","console","log","city","data","alert","name","message","querySelector","onclick","getCityPollution","value","getElementById","latitude","longitude","navigator","geolocation","getCurrentPosition","pos","crd","coords","err","code"],"sourceRoot":""}